{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","helpers/getGifs.js","components/GifCollection.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","placeholder","value","onChange","target","handleInputChange","GifItem","title","url","src","alt","getGifs","category","a","random_offset","getRandom","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","min","max","Math","floor","random","GifCollection","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifApp","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BAAOO,UAAU,eAAeC,KAAK,OAAOC,YAAY,mBAAmBC,MAAOX,EAAYY,SAAU,SAACT,IAdvF,SAACA,GACvBF,EAAcE,EAAEU,OAAOF,OAa8FG,CAAkBX,QClBlIY,EAAU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE7B,OACI,yBAAKT,UAAU,oEACX,yBAAKA,UAAU,cAEX,yBAAKA,UAAU,eAAeU,IAAKD,EAAKE,IAAKH,IAE7C,yBAAKR,UAAU,aACX,uBAAGA,UAAU,aAAb,IAA2BQ,O,uBCZlCI,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACbC,EAAgBC,EAAU,GAAG,KAC7BP,EAFa,iDAEmCQ,UAAUJ,GAF7C,4BAE0EE,EAF1E,sDAGDG,MAAMT,GAHL,cAGbU,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QATvB,kBAYZa,GAZY,4CAAH,sDAedN,EAAY,SAACY,EAAKC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,ICV3CK,EAAgB,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECHnB,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAC/B8B,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,EDZ2BK,CAAa3B,GAAjCa,EAF6B,EAEnCL,KAAca,EAFqB,EAErBA,QAEtB,OACI,oCACI,wBAAIlC,UAAU,qCAAqCa,GAClDqB,GAAW,uBAAGlC,UAAU,oCAAb,cACZ,yBAAKA,UAAU,oCAEP0B,EAAOH,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAASiB,IAAKjB,EAAIC,IAAQD,UEkBjDkB,EA9BA,WAAO,IAAD,EAEiBnD,mBAAS,CAAC,gBAF3B,mBAEZQ,EAFY,KAEAT,EAFA,KASjB,OACI,yBAAKU,UAAU,aACX,wBAAIyB,GAAG,QAAQzB,UAAU,QAAzB,YACA,kBAAC,EAAD,CAAaV,cAAeA,IAExBS,EAAWwB,KAAI,SAACV,EAAS8B,GACrB,OAAO,0BAAMF,IAAKE,EAAG3C,UAAU,8BAA8Ba,MAGrE,wBAAIb,UAAU,cAGVD,EAAWwB,KAAI,SAACV,EAAU8B,GAAX,OACX,kBAAC,EAAD,CAAeF,IAAKE,EAAG9B,SAAUA,S,MCpBrD+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.56357029.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 1) {\r\n            setCategories(categories => [inputValue, ...categories,]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input className=\"form-control\" type=\"text\" placeholder=\"Search something\" value={inputValue} onChange={(e) => { handleInputChange(e) }} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"col-md-3 col-sm-6 col-10 mb-4  animate__animated animate__fadeIn\">\r\n            <div className=\"card h-100\" >\r\n\r\n                <img className=\"card-img-top\" src={url} alt={title} />\r\n\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\"> {title}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const random_offset = getRandom(50,300)\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&offset=${random_offset}&api_key=EF8bPum3fkHFrIAyA0KIXagjYLtY03f7`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}\r\n\r\nconst getRandom = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { GifItem } from './GifItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifCollection = ({ category }) => {//Gif grid\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"row justify-content-center h-100\">\r\n                {\r\n                    images.map(img => <GifItem key={img.id} {...img} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifCollection.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifCollection } from './components/GifCollection';\r\n\r\nconst GifApp = () => {\r\n\r\n    let [categories, setCategories] = useState([\"Bob esponja\"]);\r\n\r\n    //const handleAdd = () => {\r\n    //    setCategories([...categories, 'Spiderman']);\r\n    //    //setCategories(categories => [...categories, 'Spiderman']); \r\n    //};\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 id=\"title\" className=\"mt-5\">Giph App</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            {\r\n                categories.map((category,i) => {\r\n                    return <span key={i} className=\"badge badge-dark mt-3 mr-2\">{category}</span>\r\n                })    \r\n            }\r\n            <hr className=\"separator\" />\r\n\r\n            {\r\n                categories.map((category, i) =>\r\n                    <GifCollection key={i} category={category} />\r\n                )\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default GifApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifApp from './GifApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}